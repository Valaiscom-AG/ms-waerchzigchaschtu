<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{title}} - Bento Grid Creator</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css">
    <style>
        .bento-grid {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 1rem;
        }

        .bento-item {
            border: 1px solid #dee2e6;
            border-radius: 0.25rem;
            padding: 1rem;
            min-height: 100px;
            position: relative;
            cursor: pointer;
        }

        .bento-item input {
            width: 100%;
            border: none;
            background: transparent;
            outline: none;
        }
    </style>
</head>

<body>
    <nav class="navbar navbar-expand-lg bg-body-tertiary rounded-3">
        <div class="container-fluid">
            <a class="navbar-brand" href="/"><img class="img-fluid mb-2" src="/assets/logo/logo.png" alt="valaiscom"
                    width="125">
                <span class="m-3">{{title}}</span></a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarText"
                aria-controls="navbarText" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarText">
                <ul class="navbar-nav me-auto mb-2 mb-lg-0 ">
                </ul>
                {{#if isAuthenticated }}
                <a id="helper"></a>
                <a href="/auth/signout" class="btn btn-danger"><i class="bi bi-box-arrow-right"></i></a>
                {{else}}
                <a href="/auth/signin" class="btn btn-danger"><i class="bi bi-box-arrow-in-right"></i></a>
                {{/if}}
                <button id="themeSwitcher" class="btn ms-2">
                    <i id="themeIcon" class="bi bi-moon"></i>
                </button>
            </div>
        </div>
    </nav>

    {{#if isAuthenticated }}
    <div class="container mt-4">
        <h1 class="mb-4">Bento Grid Creator</h1>

        <ul class="nav nav-tabs" id="myTab" role="tablist">
            <li class="nav-item" role="presentation">
                <button class="nav-link active" id="recent-tab" data-bs-toggle="tab" data-bs-target="#recent"
                    type="button" role="tab" aria-controls="recent" aria-selected="true">Recent Boards</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="create-tab" data-bs-toggle="tab" data-bs-target="#create" type="button"
                    role="tab" aria-controls="create" aria-selected="false">Create New</button>
            </li>
        </ul>

        <div class="tab-content" id="myTabContent">
            <div class="tab-pane fade show active" id="recent" role="tabpanel" aria-labelledby="recent-tab">
                <div class="row mt-3" id="recentBoards">
                    <!-- Recent boards will be populated here -->
                </div>
            </div>
            <div class="tab-pane fade" id="create" role="tabpanel" aria-labelledby="create-tab">
                <div class="mt-3">
                    <button class="btn btn-primary" id="createNewBoard">
                        <i class="bi bi-plus-circle me-2"></i>Create New Board
                    </button>
                </div>
            </div>
        </div>

        <div id="currentBoard" class="mt-4" style="display: none;">
            <h2 id="currentBoardName" class="mb-3"></h2>
            <div class="mb-3">
                <button class="btn btn-secondary me-2" id="exportPDF">
                    <i class="bi bi-file-earmark-pdf me-2"></i>Export PDF
                </button>
                <button class="btn btn-secondary me-2" id="exportPNG">
                    <i class="bi bi-file-earmark-image me-2"></i>Export PNG
                </button>
                <button class="btn btn-primary" id="saveBoard">
                    <i class="bi bi-save me-2"></i>Save
                </button>
            </div>
            <div class="bento-grid" id="bentoGrid">
                <!-- Bento grid items will be populated here -->
            </div>
            <div class="mt-3">
                <button class="btn btn-outline-secondary me-2" id="splitBox">
                    <i class="bi bi-grid-3x3 me-2"></i>Split Box
                </button>
                <button class="btn btn-outline-secondary me-2" id="addText">
                    <i class="bi bi-type me-2"></i>Add Text
                </button>
                <button class="btn btn-outline-secondary" id="uploadImage">
                    <i class="bi bi-image me-2"></i>Upload Image
                </button>
            </div>
        </div>
    </div>
    {{else}}
    <div class="container mt-5">
        <h1 class="fw-bold mb-3">«Wärchzigchaschtu züe»</h1>
        <a href="/auth/signin" class="btn btn-danger"><i class="bi bi-box-arrow-in-right"></i> Einloggen</a>
    </div>
    {{/if}}

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/jspdf@latest/dist/jspdf.umd.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/html2canvas@1.4.1/dist/html2canvas.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const recentBoards = document.getElementById('recentBoards');
            const createNewBoard = document.getElementById('createNewBoard');
            const currentBoard = document.getElementById('currentBoard');
            const currentBoardName = document.getElementById('currentBoardName');
            const bentoGrid = document.getElementById('bentoGrid');
            const saveBoard = document.getElementById('saveBoard');
            const exportPDF = document.getElementById('exportPDF');
            const exportPNG = document.getElementById('exportPNG');
            const splitBox = document.getElementById('splitBox');
            const addText = document.getElementById('addText');
            const uploadImage = document.getElementById('uploadImage');

            let boards = JSON.parse(localStorage.getItem('bentoBoards')) || [];

            function updateRecentBoards() {
                recentBoards.innerHTML = '';
                boards.forEach(board => {
                    const boardEl = document.createElement('div');
                    boardEl.className = 'col-md-4 mb-3';
                    boardEl.innerHTML = `
                        <div class="card">
                            <div class="card-body">
                                <h5 class="card-title">${board.name}</h5>
                                <button class="btn btn-primary btn-sm open-board" data-id="${board.id}">Open</button>
                            </div>
                        </div>
                    `;
                    recentBoards.appendChild(boardEl);
                });
            }

            function openBoard(boardId) {
                const board = boards.find(b => b.id === boardId);
                if (board) {
                    currentBoardName.textContent = board.name;
                    currentBoard.style.display = 'block';
                    renderBentoGrid(board.grid);
                }
            }

            function renderBentoGrid(grid) {
                bentoGrid.innerHTML = '';
                grid.forEach(item => {
                    const itemEl = document.createElement('div');
                    itemEl.className = 'bento-item';
                    itemEl.textContent = item.content;
                    itemEl.dataset.id = item.id;
                    itemEl.contentEditable = true; // Allow editing of the content
                    bentoGrid.appendChild(itemEl);
                });
            }

            createNewBoard.addEventListener('click', function () {
                const newBoard = {
                    id: Date.now(),
                    name: `New Board ${boards.length + 1}`,
                    grid: [{ id: Date.now(), type: 'text', content: 'New item', style: {} }]
                };
                boards.push(newBoard);
                localStorage.setItem('bentoBoards', JSON.stringify(boards));
                updateRecentBoards();
                openBoard(newBoard.id);
            });

            recentBoards.addEventListener('click', function (e) {
                if (e.target.classList.contains('open-board')) {
                    const boardId = parseInt(e.target.dataset.id);
                    openBoard(boardId);
                }
            });

            saveBoard.addEventListener('click', function () {
                // Save the current board back to local storage
                const currentGrid = [];
                document.querySelectorAll('.bento-item').forEach(item => {
                    currentGrid.push({ id: item.dataset.id, content: item.textContent });
                });
                const currentBoardId = parseInt(currentBoardName.textContent.split(' ')[2]);
                const currentBoardIndex = boards.findIndex(b => b.id === currentBoardId);
                boards[currentBoardIndex].grid = currentGrid;
                localStorage.setItem('bentoBoards', JSON.stringify(boards));
                alert('Board saved!');
            });

            exportPDF.addEventListener('click', function () {
                const { jsPDF } = window.jspdf;
                const doc = new jsPDF();

                // Create a canvas and add it to the PDF
                doc.text(currentBoardName.textContent, 10, 10);
                html2canvas(bentoGrid).then(canvas => {
                    const imgData = canvas.toDataURL('image/png');
                    doc.addImage(imgData, 'PNG', 10, 20);
                    doc.save(`${currentBoardName.textContent}.pdf`);
                });
            });

            exportPNG.addEventListener('click', function () {
                html2canvas(bentoGrid).then(canvas => {
                    const link = document.createElement('a');
                    link.href = canvas.toDataURL('image/png');
                    link.download = `${currentBoardName.textContent}.png`;
                    link.click();
                });
            });

            splitBox.addEventListener('click', function () {
                const selectedItem = prompt('Enter the content for the new split item:');
                if (selectedItem) {
                    const newItem = {
                        id: Date.now(),
                        type: 'text',
                        content: selectedItem,
                        style: {}
                    };
                    // Add the new item to the grid
                    const grid = boards.find(b => b.name === currentBoardName.textContent).grid;
                    grid.push(newItem);
                    renderBentoGrid(grid);
                }
            });

            addText.addEventListener('click', function () {
                const newText = prompt('Enter text for the new item:');
                if (newText) {
                    const newItem = {
                        id: Date.now(),
                        type: 'text',
                        content: newText,
                        style: {}
                    };
                    // Add the new item to the grid
                    const grid = boards.find(b => b.name === currentBoardName.textContent).grid;
                    grid.push(newItem);
                    renderBentoGrid(grid);
                }
            });

            uploadImage.addEventListener('click', function () {
                const fileInput = document.createElement('input');
                fileInput.type = 'file';
                fileInput.accept = 'image/*';
                fileInput.onchange = (event) => {
                    const file = event.target.files[0];
                    const reader = new FileReader();
                    reader.onload = (e) => {
                        const newItem = {
                            id: Date.now(),
                            type: 'image',
                            content: `<img src="${e.target.result}" style="width: 100%; height: auto;" />`,
                            style: {}
                        };
                        // Add the new item to the grid
                        const grid = boards.find(b => b.name === currentBoardName.textContent).grid;
                        grid.push(newItem);
                        renderBentoGrid(grid);
                    };
                    reader.readAsDataURL(file);
                };
                fileInput.click();
            });

            updateRecentBoards();
        });
    </script>
</body>

</html>